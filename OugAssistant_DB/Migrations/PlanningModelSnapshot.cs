// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using OugAssistant_DB.Features;

#nullable disable

namespace OugAssistant_DB.Migrations
{
    [DbContext(typeof(Planning))]
    partial class PlanningModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("OugAssistant.Features.Planning.Model.Goal", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Motivation")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Goal", (string)null);
                });

            modelBuilder.Entity("OugAssistant.Features.Planning.Model.RoutineTask", b =>
                {
                    b.Property<DateTime>("DateTime")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("RoutineId")
                        .HasColumnType("uniqueidentifier");

                    b.HasIndex("RoutineId");

                    b.ToTable("RoutineTask", (string)null);
                });

            modelBuilder.Entity("OugAssistant.Features.Planning.Model.Task", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Priority")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Task");

                    b.UseTptMappingStrategy();
                });

            modelBuilder.Entity("OugAssistant.Features.Planning.Model.TaskHistory", b =>
                {
                    b.Property<DateTime>("FinishDateTime")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("TaskId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasIndex("TaskId");

                    b.ToTable("TaskHistory", (string)null);
                });

            modelBuilder.Entity("OugAssistant.Features.Planning.Model.Event", b =>
                {
                    b.HasBaseType("OugAssistant.Features.Planning.Model.Task");

                    b.Property<DateTime>("DateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Place")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.ToTable("Event", (string)null);
                });

            modelBuilder.Entity("OugAssistant.Features.Planning.Model.Mission", b =>
                {
                    b.HasBaseType("OugAssistant.Features.Planning.Model.Task");

                    b.Property<DateTime>("DeadLine")
                        .HasColumnType("datetime2");

                    b.ToTable("Mission", (string)null);
                });

            modelBuilder.Entity("OugAssistant.Features.Planning.Model.Routine", b =>
                {
                    b.HasBaseType("OugAssistant.Features.Planning.Model.Task");

                    b.Property<TimeOnly>("TimeDay")
                        .HasColumnType("time");

                    b.Property<int>("WeekDay")
                        .HasColumnType("int");

                    b.ToTable("Routine", (string)null);
                });

            modelBuilder.Entity("OugAssistant.Features.Planning.Model.RoutineTask", b =>
                {
                    b.HasOne("OugAssistant.Features.Planning.Model.Routine", "Routine")
                        .WithMany()
                        .HasForeignKey("RoutineId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Routine");
                });

            modelBuilder.Entity("OugAssistant.Features.Planning.Model.TaskHistory", b =>
                {
                    b.HasOne("OugAssistant.Features.Planning.Model.Task", "Task")
                        .WithMany()
                        .HasForeignKey("TaskId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Task");
                });

            modelBuilder.Entity("OugAssistant.Features.Planning.Model.Event", b =>
                {
                    b.HasOne("OugAssistant.Features.Planning.Model.Task", null)
                        .WithOne()
                        .HasForeignKey("OugAssistant.Features.Planning.Model.Event", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("OugAssistant.Features.Planning.Model.Mission", b =>
                {
                    b.HasOne("OugAssistant.Features.Planning.Model.Task", null)
                        .WithOne()
                        .HasForeignKey("OugAssistant.Features.Planning.Model.Mission", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("OugAssistant.Features.Planning.Model.Routine", b =>
                {
                    b.HasOne("OugAssistant.Features.Planning.Model.Task", null)
                        .WithOne()
                        .HasForeignKey("OugAssistant.Features.Planning.Model.Routine", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
